{"version":3,"sources":["../../src/services/auth-service.js"],"names":["User","require","verifyUser","username","findOne","name","exports","authenticateUser","password","catch","err","then","user"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,gBAAR,CAAb;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,SAAOH,KAAKI,OAAL,CAAa,EAAEC,MAAMF,QAAR,EAAb,CAAP;AACD;AACDG,QAAQJ,UAAR,GAAqBA,UAArB;;AAEA,SAASK,gBAAT,CAA0BJ,QAA1B,EAAoCK,QAApC,EAA8C;AAC5C,SAAON,WAAWC,QAAX,EACNM,KADM,CACA;AAAA,WAAOC,GAAP;AAAA,GADA,EAENC,IAFM,CAED,UAACC,IAAD,EAAU;AACd,QAAI,CAACA,IAAL,EAAW;AACT;AACD,KAFD,MAEO,IAAIA,KAAKJ,QAAL,KAAkBA,QAAtB,EAAgC;AACrC;AACD,KAFM,MAEA;AACL;AACD;AACF,GAVM,CAAP;AAWD;AACDF,QAAQC,gBAAR,GAA2BA,gBAA3B","file":"auth-service.js","sourcesContent":["const User = require('../models/user');\n\nfunction verifyUser(username) {\n  return User.findOne({ name: username });\n}\nexports.verifyUser = verifyUser;\n\nfunction authenticateUser(username, password) {\n  return verifyUser(username)\n  .catch(err => err)\n  .then((user) => {\n    if (!user) {\n      // return user unknown promise\n    } else if (user.password !== password) {\n      // return wrong password promise\n    } else {\n      // return success promise\n    }\n  });\n}\nexports.authenticateUser = authenticateUser;\n"]}